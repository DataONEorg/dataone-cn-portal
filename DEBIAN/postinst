#!/bin/bash

LONG_DATE=`date +%Y%m%d%H%M%S`

TOMCAT=tomcat6
TOMCAT_USER=tomcat6
TOMCAT_HOME=/var/lib/tomcat6
APACHE_CONF=/etc/apache2
JK_CONF=portal_jk.conf

PG=postgresql-8.4
PG_CONF=/etc/postgresql/8.4/main

PG_USER=postgres
DB_NAME=csd
DB_USER=cilogon
DB_PASS=cilogon

PGPOOL_CONF_DIR=/etc
PGPOOL_CONF=pgpool.conf

SOURCE_DIR=/usr/share/portal
SCRIPT_DIR=${SOURCE_DIR}/debian
###############################################################################
# Install portal war file
###############################################################################

## Stop tomcat
echo "Stopping Tomcat"
/etc/init.d/${TOMCAT} stop

## backup the old war file
if [ -e ${TOMCAT_HOME}/webapps/portal.war.current ]
then
  echo "Backing up ${TOMCAT_HOME}/webapps/portal.war.current to ${TOMCAT_HOME}/webapps/portal.war.${LONG_DATE}"
  mv ${TOMCAT_HOME}/webapps/portal.war.current ${TOMCAT_HOME}/webapps/portal.war.${LONG_DATE}
fi  

## remove the portal application directory
if [ -d ${TOMCAT_HOME}/webapps/portal ]
then
  echo "Removing the old portal application directories"
  rm -rf ${TOMCAT_HOME}/webapps/portal
fi 

## copy the new war file into the webapps directory
echo copying new portal.war file to ${TOMCAT_HOME}/webapps/portal.war
cp ${SOURCE_DIR}/portal.war ${TOMCAT_HOME}/webapps/portal.war

## expand the war file
CURR_DIR=`pwd`

## make portal directory and extract portal.war into it.
echo "Making portal application directory: ${TOMCAT_HOME}/webapps/portal"
mkdir ${TOMCAT_HOME}/webapps/portal
cd ${TOMCAT_HOME}/webapps/portal

echo "extracting portal.war into ${TOMCAT_HOME}/webapps/portal"
jar -xvf ${TOMCAT_HOME}/webapps/portal.war > /dev/null

mv ${TOMCAT_HOME}/webapps/portal.war ${TOMCAT_HOME}/webapps/portal.war.current

cp ${SOURCE_DIR}/debian/log4j.properties ${TOMCAT_HOME}/webapps/portal/WEB-INF/
chown -R ${TOMCAT_USER}.${TOMCAT_USER} ${TOMCAT_HOME}/webapps/portal
echo cd to $CURR_DIR
cd $CURR_DIR

## replace the CN URL in the web.xml file to use a hostname as found by issuing a hostname -f
## replace the CILogon callback URLs for the portal in the rdf config file
HOSTNAME=`/bin/hostname -f`

if [ "$HOSTNAME" != "" ]
then
	sed -i.bak  's/\(<param-value>https:\/\/\)cn\.dataone\.org/\1'${HOSTNAME}'/;' ${TOMCAT_HOME}/webapps/portal/WEB-INF/web.xml
	sed -i.bak  's/\(<d:callbackUri rdf:resource="https:\/\/\)cn\.dataone\.org/\1'${HOSTNAME}'/;' ${TOMCAT_HOME}/webapps/portal/WEB-INF/cfg.rdf
	sed -i.bak  's/\(<d:failureUri rdf:resource="https:\/\/\)cn\.dataone\.org/\1'${HOSTNAME}'/;' ${TOMCAT_HOME}/webapps/portal/WEB-INF/cfg.rdf
	sed -i.bak  's/\(<d:successUri rdf:resource="https:\/\/\)cn\.dataone\.org/\1'${HOSTNAME}'/;' ${TOMCAT_HOME}/webapps/portal/WEB-INF/cfg.rdf
else
	echo "HOSTNAME can not be set in ${TOMCAT_HOME}/webapps/portal/WEB-INF/web.xml"
fi
###############################################################################
# Configure Tomcat
###############################################################################

# Configure the context file
echo "Copying ${SCRIPT_DIR}/portal.xml to ${TOMCAT_HOME}/conf/Catalina/localhost/"
cp ${SCRIPT_DIR}/portal.xml ${TOMCAT_HOME}/conf/Catalina/localhost/

# Add permissions needed by portal
echo "Copying ${SCRIPT_DIR}/56portal.policy to ${TOMCAT_HOME}/conf/policy.d/"
cp ${SCRIPT_DIR}/56portal.policy ${TOMCAT_HOME}/conf/policy.d/

###############################################################################
# Configure Apache
###############################################################################

## Stop apache
echo "Stopping Apache"
/etc/init.d/apache2 stop

## copy in jk mount configuration file
if [ -e ${APACHE_CONF}/jk_mount/${JK_CONF} ]
then 
  JK_DIFF=`diff ${SCRIPT_DIR}/${JK_CONF} ${APACHE_CONF}/jk_mount/${JK_CONF}`
  if [ "${JK_DIFF}" != "" ]
  then
    echo "Backing up ${APACHE_CONF}/jk_mount/${JK_CONF} to ${APACHE_CONF}/jk_mount/${JK_CONF}.${LONG_DATE}"
    mv ${APACHE_CONF}/jk_mount/${JK_CONF} ${APACHE_CONF}/jk_mount/${JK_CONF}.${LONG_DATE}
  fi
fi
echo "Copying ${JK_CONF} site file to ${APACHE_CONF}/jk_mount/"
cp ${SCRIPT_DIR}/${JK_CONF} ${APACHE_CONF}/jk_mount/

###############################################################################
# Configure Postgres
###############################################################################
## create CSD schema and user
echo "Creating ${DB_NAME} database schema"
su ${PG_USER} -c "createdb ${DB_NAME}"

echo "Creating ${DB_USER} user" 
su ${PG_USER} -c "psql -c \"CREATE USER ${DB_USER} WITH UNENCRYPTED PASSWORD '${DB_PASS}'\""

# run the script to create CSD user and tables
su ${PG_USER} -c "psql -f ${SCRIPT_DIR}/portal-tables.sql ${DB_NAME}"

## modify pg_hba.conf
PG_HBA_IS_MODIFIED=`grep "${DB_NAME} ${DB_USER} 127.0.0.1 255.255.255.255 password" ${PG_CONF}/pg_hba.conf`
if [ "${PG_HBA_IS_MODIFIED}" == "" ]
then
  echo "backing up ${PG_CONF}/pg_hba.conf to ${PG_CONF}/pg_hba.conf.bak"
  cp ${PG_CONF}/pg_hba.conf ${PG_CONF}/pg_hba.conf.bak
  chown postgres ${PG_CONF}/pg_hba.conf
  chgrp postgres ${PG_CONF}/pg_hba.conf

  echo "appending 'host ${DB_NAME} ${DB_USER} 127.0.0.1 255.255.255.255 password' to ${PG_CONF}/pg_hba.conf"
  echo "host ${DB_NAME} ${DB_USER} 127.0.0.1 255.255.255.255 password" >> ${PG_CONF}/pg_hba.conf
fi

## Restart the postgres db
echo "Restarting postgres database"
/etc/init.d/${PG} restart

###############################################################################
# Configure pgpool2
###############################################################################
# put pgpool.conf in place
## copy configuration file
if [ -e ${PGPOOL_CONF_DIR}/${PGPOOL_CONF} ]
then 
  PGPOOL_DIFF=`diff ${SCRIPT_DIR}/${PGPOOL_CONF} ${PGPOOL_CONF_DIR}/${PGPOOL_CONF}`
  if [ "${PGPOOL_DIFF}" != "" ]
  then
    echo "Backing up ${PGPOOL_CONF_DIR}/${PGPOOL_CONF} to ${PGPOOL_CONF_DIR}/${PGPOOL_CONF}.${LONG_DATE}"
    mv ${PGPOOL_CONF_DIR}/${PGPOOL_CONF} ${PGPOOL_CONF_DIR}/${PGPOOL_CONF}.${LONG_DATE}
  fi
fi
echo "Copying ${PGPOOL_CONF} file to ${PGPOOL_CONF_DIR}/"
cp ${SCRIPT_DIR}/${PGPOOL_CONF} ${PGPOOL_CONF_DIR}/${PGPOOL_CONF}

# modify /etc/pgpool.conf to add entries for the CN hosts to replicate with

# modify the pg_hba.conf to allow connections from the different CN hosts

# modify /etc/postgresql/8.4/main/postgresql.conf to listen on more than 'localhost'

## Restart the postgres db
echo "Restarting postgres database"
/etc/init.d/${PG} restart

## Restart the pgpool
echo "Restarting pgpool"
pgpool stop
pgpool

###############################################################################
# Start Apache and Tomcat
###############################################################################

## Start Apache
/etc/init.d/apache2 start

## Start Tomcat
echo "starting Tomcat server"
/etc/init.d/${TOMCAT} start