#!/bin/bash

# source the debconf library
if [ -e "/usr/share/debconf/confmodule" ]; then
    . /usr/share/debconf/confmodule
else
    echo "debconf must be installed. Exiting."
    exit 1
fi

LONG_DATE=`date +%Y%m%d%H%M%S`

TOMCAT=tomcat6
TOMCAT_USER=tomcat6
TOMCAT_HOME=/var/lib/tomcat6
APACHE_CONF=/etc/apache2
JK_CONF=portal_jk.conf

PG=postgresql-8.4
PG_CONF=/etc/postgresql/8.4/main
PG_DATA=/var/lib/postgresql/8.4/main

PG_USER=postgres
DB_NAME=csd
DB_USER=cilogon
DB_PASS=cilogon

KEY_DIR=/etc/ssl/private
CERT_DIR=/etc/ssl/certs
CERT_FILENAME=_.dataone.org.crt

HAZELCAST_PORT=5703

SOURCE_DIR=/usr/share/portal
SCRIPT_DIR=${SOURCE_DIR}/debian

D1_CONF=/etc/dataone
NODE_PROPS="$D1_CONF/node.properties"

D1_LOG_DIR=/var/log/dataone
if [ ! -e ${D1_LOG_DIR} ]; then
    mkdir -p ${D1_LOG_DIR}
fi
###############################################################################
# functions to echo to STDERR or the install log instead of STDOUT
###############################################################################
logError () {
    echo -e "$@" 1>&2
}

log () {
    echo -e "$@" >> ${D1_LOG_DIR}/dataone-cn-portal.install.log
}

###############################################################################
# Set up hazelcast configuration
###############################################################################

HAZELCAST_INTERFACE=""
SPACER="        "
for ip in `egrep 'cn.iplist=' ${NODE_PROPS}  | awk 'BEGIN { FS = "=" } ; { print $2 }'`
do
    IP_XML_NODE="<interface>${ip}<\/interface>"
    HAZELCAST_INTERFACE=${HAZELCAST_INTERFACE}${IP_XML_NODE}'\n'${SPACER}
done

## replace the string <interface>127.0.0.1</interface> with the environment's iplist
## <interface>127.0.0.1</interface>
sed -i.bak --regexp-extended "s/<interface>127\.0\.0\.1<\/interface>/${HAZELCAST_INTERFACE}/;" ${D1_CONF}/portal/hazelcast.xml

## open up the correct port for hazelcast
for ip in `egrep 'cn.iplist=' ${NODE_PROPS}  | awk 'BEGIN { FS = "=" } ; { print $2 }'`
do
    ufw allow to any port ${HAZELCAST_PORT} from ${ip}
done

###############################################################################
# Install portal war file
###############################################################################

## Stop tomcat
log "Stopping Tomcat"
/etc/init.d/${TOMCAT} stop

## backup the old war file
if [ -e ${TOMCAT_HOME}/webapps/portal.war.current ]
then
  log "Backing up ${TOMCAT_HOME}/webapps/portal.war.current to ${TOMCAT_HOME}/webapps/portal.war.${LONG_DATE}"
  mv ${TOMCAT_HOME}/webapps/portal.war.current ${TOMCAT_HOME}/webapps/portal.war.${LONG_DATE}
fi  

## remove the portal application directory
if [ -d ${TOMCAT_HOME}/webapps/portal ]
then
  log "Removing the old portal application directories"
  rm -rf ${TOMCAT_HOME}/webapps/portal
fi 

## copy the new war file into the webapps directory
log copying new portal.war file to ${TOMCAT_HOME}/webapps/portal.war
cp ${SOURCE_DIR}/portal.war ${TOMCAT_HOME}/webapps/portal.war

## expand the war file
CURR_DIR=`pwd`

## make portal directory and extract portal.war into it.
log "Making portal application directory: ${TOMCAT_HOME}/webapps/portal"
mkdir ${TOMCAT_HOME}/webapps/portal
cd ${TOMCAT_HOME}/webapps/portal

log "extracting portal.war into ${TOMCAT_HOME}/webapps/portal"
jar -xvf ${TOMCAT_HOME}/webapps/portal.war > /dev/null

mv ${TOMCAT_HOME}/webapps/portal.war ${TOMCAT_HOME}/webapps/portal.war.current

cp ${SOURCE_DIR}/debian/log4j.properties ${TOMCAT_HOME}/webapps/portal/WEB-INF/
chown -R ${TOMCAT_USER}.${TOMCAT_USER} ${TOMCAT_HOME}/webapps/portal
log cd to $CURR_DIR
cd $CURR_DIR

## replace the CN URL in the web.xml file to use a hostname as found by issuing a hostname -f
## replace the CILogon callback URLs for the portal in the rdf config file
#HOSTNAME=`/bin/hostname -f`
#db_get dataone-cn-os-core/cn.router.hostname
#HOSTNAME=${RET}
HOSTNAME=`egrep 'cn.router.hostname=' ${NODE_PROPS}  | awk 'BEGIN { FS = "=" } ; { print $2 }'`

if [ "$HOSTNAME" != "" ]
then
	sed -i.bak  's/\(<param-value>https:\/\/\)cn\.dataone\.org/\1'${HOSTNAME}'/;' ${TOMCAT_HOME}/webapps/portal/WEB-INF/web.xml
	sed -i.bak  's/\(<d:callbackUri rdf:resource="https:\/\/\)cn\.dataone\.org/\1'${HOSTNAME}'/;' ${TOMCAT_HOME}/webapps/portal/WEB-INF/cfg.rdf
	sed -i.bak  's/\(<d:failureUri rdf:resource="https:\/\/\)cn\.dataone\.org/\1'${HOSTNAME}'/;' ${TOMCAT_HOME}/webapps/portal/WEB-INF/cfg.rdf
	sed -i.bak  's/\(<d:successUri rdf:resource="https:\/\/\)cn\.dataone\.org/\1'${HOSTNAME}'/;' ${TOMCAT_HOME}/webapps/portal/WEB-INF/cfg.rdf
else
	log "HOSTNAME (cn.router.hostname) cannot be set in ${TOMCAT_HOME}/webapps/portal/WEB-INF/web.xml or ${TOMCAT_HOME}/webapps/portal/WEB-INF/cfg.rdf"
fi

## configure to hit only a single PG instance - defualt to first in ip list
for ip in `egrep 'cn.iplist=' ${NODE_PROPS}  | awk 'BEGIN { FS = "=" } ; { print $2 }'`
do
    PG_HOST=${ip}
   	sed -i.bak  's/\(<sqlc:adminHost>\)cn\.dataone\.org/\1'${PG_HOST}'/;' ${TOMCAT_HOME}/webapps/portal/WEB-INF/cfg.rdf
   	sed -i.bak  's/\(<sqlc:host>\)cn\.dataone\.org/\1'${PG_HOST}'/;' ${TOMCAT_HOME}/webapps/portal/WEB-INF/cfg.rdf
    break # just use the first
done

## configure the CILogon skin, default to PRODUCTION
CILOGON_SKIN=DataONE
CONTEXT_LABEL=`egrep 'cn.context.label=' ${NODE_PROPS}  | awk 'BEGIN { FS = "=" } ; { print $2 }'`
if [[ "${CONTEXT_LABEL}" == "DEV" ]]; then
	CILOGON_SKIN=DataONEDev
fi
if [[ "${CONTEXT_LABEL}" == "STAGE" ]]; then
	CILOGON_SKIN=DataONEStage
fi
if [[ "${CONTEXT_LABEL}" == "SANDBOX" ]]; then
	CILOGON_SKIN=DataONESandbox
fi
## replace in the config file
sed -i.bak  's/\(<d:portalSkin>\)DataONE/\1'${CILOGON_SKIN}'/;' ${TOMCAT_HOME}/webapps/portal/WEB-INF/cfg.rdf

###############################################################################
# Configure Tomcat
###############################################################################

# Configure the context file
log "Copying ${SCRIPT_DIR}/portal.xml to ${TOMCAT_HOME}/conf/Catalina/localhost/"
cp ${SCRIPT_DIR}/portal.xml ${TOMCAT_HOME}/conf/Catalina/localhost/

# Add permissions needed by portal
log "Copying ${SCRIPT_DIR}/56portal.policy to ${TOMCAT_HOME}/conf/policy.d/"
cp ${SCRIPT_DIR}/56portal.policy ${TOMCAT_HOME}/conf/policy.d/

###############################################################################
# Configure Apache
###############################################################################

## Stop apache
log "Stopping Apache"
/etc/init.d/apache2 stop

## copy in jk mount configuration file
if [ -e ${APACHE_CONF}/jk_mount/${JK_CONF} ]
then 
  JK_DIFF=`diff ${SCRIPT_DIR}/${JK_CONF} ${APACHE_CONF}/jk_mount/${JK_CONF}`
  if [ "${JK_DIFF}" != "" ]
  then
    log "Backing up ${APACHE_CONF}/jk_mount/${JK_CONF} to ${APACHE_CONF}/jk_mount/${JK_CONF}.${LONG_DATE}"
    mv ${APACHE_CONF}/jk_mount/${JK_CONF} ${APACHE_CONF}/jk_mount/${JK_CONF}.${LONG_DATE}
  fi
fi
log "Copying ${JK_CONF} site file to ${APACHE_CONF}/jk_mount/"
cp ${SCRIPT_DIR}/${JK_CONF} ${APACHE_CONF}/jk_mount/

###############################################################################
# Configure Postgres
###############################################################################
## create CSD schema and user
log "Creating ${DB_NAME} database schema"
su ${PG_USER} -c "createdb ${DB_NAME}"

log "Creating ${DB_USER} user" 
su ${PG_USER} -c "psql -c \"CREATE USER ${DB_USER} WITH UNENCRYPTED PASSWORD '${DB_PASS}'\""

# run the script to create CSD user and tables
su ${PG_USER} -c "psql -f ${SCRIPT_DIR}/portal-tables.sql ${DB_NAME}"

## modify pg_hba.conf to allow traffic from each CN
IP_ADDRESS=127.0.0.1
for ip in `egrep 'cn.iplist=' ${NODE_PROPS}  | awk 'BEGIN { FS = "=" } ; { print $2 }'`
do
    IP_ADDRESS=${ip}
    PG_HBA_IS_MODIFIED=`grep "${DB_NAME} ${DB_USER} ${IP_ADDRESS} 255.255.255.255 password" ${PG_CONF}/pg_hba.conf`
	if [ "${PG_HBA_IS_MODIFIED}" == "" ]
	then
	  log "backing up ${PG_CONF}/pg_hba.conf to ${PG_CONF}/pg_hba.conf.bak"
	  cp ${PG_CONF}/pg_hba.conf ${PG_CONF}/pg_hba.conf.bak
	  chown postgres ${PG_CONF}/pg_hba.conf
	  chgrp postgres ${PG_CONF}/pg_hba.conf
	
	  log "appending 'host ${DB_NAME} ${DB_USER} ${IP_ADDRESS} 255.255.255.255 password' to ${PG_CONF}/pg_hba.conf"
	  echo "host ${DB_NAME} ${DB_USER} ${IP_ADDRESS} 255.255.255.255 password" >> ${PG_CONF}/pg_hba.conf
	fi
done

## modify /etc/postgresql/8.4/main/postgresql.conf to listen on more than 'localhost'
## original line looks like this:
## #listen_addresses = 'localhost'
## we want this:
## listen_addresses = '*'

PG_LISTEN_IS_MODIFIED=`egrep "listen_addresses *= *'\*'" ${PG_CONF}/postgresql.conf`
if [ "${PG_LISTEN_IS_MODIFIED}" == "" ]
then
	sed -i.bak  "s/\(listen_addresses\s*\=\s*\)'localhost'/\1 '*'/;" ${PG_CONF}/postgresql.conf
fi
# make sure it is not commented out
sed -i.bak  "s/#\(listen_addresses\)/\1 /;" ${PG_CONF}/postgresql.conf

# enable SSL access for the server
db_get dataone-cn-os-core/cn.server.privatekey.filepath
KEY_FILE=${RET}
KEY_FILENAME=$(basename $KEY_FILE)
ln -s ${PG_DATA}/server.key ${KEY_DIR}/${KEY_FILENAME}
ln -s ${PG_DATA}/server.crt ${CERT_DIR}/${CERT_FILENAME}

## Restart the postgres db
log "Restarting postgres database"
/etc/init.d/${PG} restart

###############################################################################
# Start Apache and Tomcat
###############################################################################

## Start Apache
/etc/init.d/apache2 start

## Start Tomcat
log "starting Tomcat server"
/etc/init.d/${TOMCAT} start

## Update DateONE Version Info Doc
java -jar /usr/share/dataone-cn-version-tool/dataone-cn-version-tool.jar -F/usr/share/dataone-cn-version-tool/version-tool.properties -html > /var/www/cn-version.html
